---
title: "Final Project Second Draft"
output: pdf_document
---
\maketitle

#### Running Title:
07 - 405 - Crimes in Chicago

#### Group Members:
Benjamin Mao, Cecilia Xin, Monica Liu, Jared Boyd

#### Introduction to Project and Dataset:
Our goal for this project is to find patterns in crime in Chicago. Our dataset
is sourced from the Chicago Police Department's CLEAR system, comprising 
reported incidents of crime in the City of Chicago from 2001 to the present, 
with addresses anonymized at the block level for victim privacy. This data
includes the date, time, type, and general location of crime in Chicago.

In the second draft, we improved the first draft by fixing up some details in 
graphs and added six more graphs using ggplot.

#### Load in the Data
---

```{r}
library(readr)
crimes_data <- read_csv("Crimes_-_2001_to_Present.csv", show_col_types = FALSE)
# names(crimes_data)
# # print dimension
# dim(crimes_data)
# summary(crimes_data)
```

# Data cleaning
```{r}

# Create a subset only including columns "Date", "Primary Type", "Location Description", "Arrest", "Year", "Latitude", and "Longitude”
crimes_data <- crimes_data[, c("Date", "Primary Type", "Location Description", "Arrest", "Year", "Latitude", "Longitude")]

# Remove rows with missing values
crimes_data <- na.omit(crimes_data)

# Extract the month from the Date column
crimes_data$Month <- format(as.Date(crimes_data$Date, format = "%m/%d/%Y"), "%m")

# Extract the date  from the Date column
crimes_data$DateWithoutTime <- format(as.Date(crimes_data$Date, format = "%m/%d/%Y"), "%d")

# Extract the hour from the Date column
crimes_data$Hour <- format(as.POSIXct(crimes_data$Date, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H")

# print(head(crimes_data$DateWithoutTime))
# print(head(crimes_data$Month))
# print(head(crimes_data$Hour))

```





#### Six Standard Plots
## Histogram
With this plot we will analyze the number of crimes in different years.
The graph shows that the number of crimes has been decreasing over time.

```{r}
hist(crimes_data$Year, main = "Distribution of Years", xlab = "Year", 
     ylab = "Frequency", col = "skyblue", border = "white")
```

## Curve
With this plot we will analyze arrest rate over time.
The graph shows that the arrest rate has been decreasing over time.
It starts around 0.3 and slowly decreases to around 0.1  from 2001 to 2023


```{r}
# Plot the year on the x-axis and the arrest rate (calculated per year) on the y-axis to see if arrest rates are increasing or decreasing over time. In the Arrest column, True means an arrest was made, and False means no arrest was made.

#install.packages("dplyr")
library(dplyr)
arrests_by_year <- crimes_data %>% 
  group_by(Year) %>% 
  summarise(Arrest_Rate = sum(Arrest == "TRUE") / n())
# arrests_by_year
```


```{r}
# curve

plot(arrests_by_year$Year, arrests_by_year$Arrest_Rate, 
     type = "o",  
     xlab = "Year", ylab = "Arrest Rate",
     main = "Arrest Rate from 2001 to 2023",
     col = "pink", pch = 16, ylim = c(0, 0.5))
```


## Pie Chart
With this plot we will analyze the frequency of the different crime types.
The graph shows that theft is the most common crime type, 
followed by battery and criminal damage.
We have ordered the legend in decreasing amounts to make a clear
view of the most common to least common crimes.

```{r}
crime_type <- table(crimes_data$`Primary Type`)
total_crimes <- sum(crime_type)
crime_type_percent <- prop.table(crime_type) * 100

# sort types with frequencies below 3% into "Other"category 
other_crime_types <- names(crime_type_percent)[crime_type_percent < 3]
crime_type["Other"] <- sum(crime_type[other_crime_types])
crime_type <- crime_type[!(names(crime_type) %in% other_crime_types)]

# plot Primary Type pie chart
pie(crime_type, main = "Distribution of Crimes by Type", col = rainbow(length(crime_type)))

# Also plot the percentage in another graph
par(xpd = TRUE)
plot.new()

order = order(crime_type_percent[names(crime_type)], decreasing = TRUE)

round_desc_perc = round((crime_type_percent[names(crime_type)])[order], 2)
ordered_names = names(crime_type)[order]
ordered_colors = rainbow(length(crime_type))[order]

legend("topright", legend = paste(ordered_names, "(", 
  round_desc_perc, "%)"), cex = 0.8, fill = ordered_colors)
```

## Barplot
With this plot we will analyze the location of the crimes.
The graph shows that most crimes occur in the street, followed by residences and apartments.

```{r}
# Plot the location of the crimes using a barplot
table = table(crimes_data$`Location Description`)
ordered = table[order(table, decreasing = TRUE)][1:5]

# Make the x-axis labels more readable
names(ordered) = c("Street", "Residence", "Apartment", "Sidewalk", "Other")

# Plot bar plot
barplot(ordered, main = "Top 5 Locations of Crimes", xlab = "Location", ylab = "Frequency", col = "lightblue")
```

## Scatter Plot
With this plot we will analyze the relationship between the latitude and longitude of the crimes.
The graph shows that most crimes occur in the city center, with a few outliers in the suburbs.
Future improvement: use ggplot to create a more detailed and visually appealing scatterplot.

```{r}
# Print a scatterplot of lattitude versus longitude. This could reveal if certain areas of the city are more prone to crime.
sampled_crimes <- crimes_data[sample(1:nrow(crimes_data), 10000), ]

plot(sampled_crimes$Longitude, sampled_crimes$Latitude, 
     xlab = "Longitude", ylab = "Latitude",
     main = "Scatterplot of Crime Locations",
     xlim = c(-87.85, -87.5), ylim = c(41.6, 41.9), pch = 20, col = "blue", cex = 0.5, bg = "white")

```

## Density Plot
This is a density plot showing how crime incidents are distributed across different times of the day, with the x-axis representing hours since midnight and the y-axis representing the density of crime occurrences.
The graph shows that crime is most likely to occur between 12:00 PM and 12:00 AM, with a peak around 8:00 PM.

```{r}
# Assuming your dataset is named 'data' and the date column is named 'Date'

# Step 1: Convert 'Date' to POSIXct (date-time object) and extract time
crimes_data$Time <- format(strptime(crimes_data$Date, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H:%M:%S")

# Step 2: Convert Time to hours since midnight
crimes_data$Hours <- as.numeric(substr(crimes_data$Time, 1, 2)) + 
              as.numeric(substr(crimes_data$Time, 4, 5))/60 +
              as.numeric(substr(crimes_data$Time, 7, 8))/3600

# Step 3: Create the density plot
plot(density(crimes_data$Hours, na.rm = TRUE), 
     main = "Density of Crimes Over Time of Day",
     xlab = "Hours (since midnight)",
     ylab = "Density")

# Density plot with ggplot
# date = substr(crimes_data$Date, 1, 10)
# 
# years_after <- as.numeric(substr(date, 1, 2)) / 30 + 
#               as.numeric(substr(date, 4, 5)) / 365 +
#               as.numeric(substr(date, 7, 10))
# 
# density = density(years_after)
# 
# ggplot(data.frame = density) +
#   aes(density$x, density$y) +
#   geom_line() +
#   labs(x = "Year", y = "Density", title = "Density of Crime over Time")
 
```



#### Statistical modeling and analysis
We will use a linear regression model to analyze the relationship between 
the number of cannabis possession crimes and the number of heroin 
possession crimes per year.

As seen in the graph below, there is a pretty strong relation between
the crimes of these two drugs in Chicago. Further in this project we intend
to look more into this relation and try and find others.
```{r}
cannabis = c()
heroin = c()

for(year in 2001:2024){
  which = crimes_data$Year == year
  desc = crimes_data$Description[which]
  total_c = sum(grepl("CANNABIS", desc))
  total_h = sum(grepl("HEROIN", desc))
  cannabis = c(cannabis, total_c)
  heroin = c(heroin, total_h)
}
reg_line = lm(heroin ~ cannabis)

plot(x = cannabis, y = heroin, 
     main="Linear Regression of Heroin Use on Cannabis Use", 
     col = "blue", xlab="Amount of Cannabis Crimes per Year",
     ylab="Amount of Heroin Crimes per Year")
abline(reg_line[[1]][1], reg_line[[1]][2], col = "red")
```

#### Six GGPlots
```{r}
#install.packages("ggplot2")
library(ggplot2)

```

## Graph 1
Intrepretation:
This lollipop plot graph shows the number of crimes in Chicago per hour. The graph shows that the number of crimes is highest in the evening, with a peak around 8:00 PM. This could be due to the warmer weather and longer days, which may lead to more people being outside and more opportunities for crime. The graph also shows that the number of crimes is lowest in the early morning, with a trough around 5:00 AM. This could be due to the colder weather and shorter days, which may lead to fewer people being outside and fewer opportunities for crime.

```{r}
# Libraries
library(ggplot2)
library(dplyr)

# Extract the hour data from Date
crimes_data$Hour <- format(as.POSIXct(crimes_data$Date, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H")

# Sum up the number of crimes per hour
crimes_per_hour <- crimes_data %>% 
  group_by(Hour) %>% 
  summarise(n = n())

# Create data
data <- data.frame(
  x=crimes_per_hour$Hour,
  y=crimes_per_hour$n
)
 
# Plot
# Give a title to the graph
ggplot(data, aes(x=x, y=y)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=y), color="skyblue") +
  geom_point( color="skyblue", size=3) +
  theme_minimal() +
  labs(title = "Number of Crimes in Chicago per Hour",
       x = "Hour",
       y = "Number of Crimes")


# print(data)
```

## Graph 2
This graph is a Facet Wrap of a Bar plot. It shows for each of the
most common types of crime the frequency of them in each district.
From this graph we can see that some districts are much safer
in terms of frequency of crimes.

Another note is that there are massive spikes in Narcotics for certain
districts and pretty even across the others.
```{r}
common_crimes = sort(table(crimes_data$`Primary Type`), decreasing = TRUE)[1:9]

filter = crimes_data$`Primary Type` %in% names(common_crimes)

dist = crimes_data$District[filter == TRUE]
type = crimes_data$`Primary Type`[filter == TRUE]

crimes_data_filtered = data.frame(District = dist, Type = type)

# Plot
ggplot(crimes_data_filtered, aes(x = District)) +
  geom_bar(aes(fill = Type), position = "dodge") +
  facet_wrap(~Type, ncol = 3) +
  theme_minimal() +
  labs(title = "Frequency of Crimes in Each District",
       x = "District",
       y = "Frequency of Crimes")


```




## Graph 3
Intrepretation:
This packed circle chart shows the number of crimes in Chicago per location. The chart shows that the number of crimes is highest in the street, followed by residences and apartments. This could be due to the fact that more people are outside on the street, and that residences and apartments are more likely to be targeted by criminals. The chart also shows that the number of crimes is lowest in the alley, with a trough in the park. This could be due to the fact that alleys are less frequented by people, and that parks are more likely to be patrolled by police.
```{r}
# libraries
# install.packages("packcircles")
library(packcircles)
# install.packages("ggplot2")
library(ggplot2)
# install.packages("viridis")
library(viridis)

table = table(crimes_data$`Location Description`)
ordered_location = table[order(table, decreasing = TRUE)][1:5]
# Convert into a dataframe with two columns: group and value
crime_counts <- data.frame(
  `Primary Type` = names(ordered_location),
  count = ordered_location
)

# print(crime_counts)
```


```{r}
# libraries
library(packcircles)
library(ggplot2)
library(viridis)
# df <- data.frame(group = c("A", "B", "C", "D"),
#                  value = c(10, 15, 20, 25))
group = crime_counts$count.Var1
value = crime_counts$count.Freq

ggplot(crime_counts, aes(x = group, y = group, size = value, label = group)) +
  geom_point(alpha = 0.7) +
  scale_size_area(max_size = 20) +
  theme_minimal() +
  theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank()) +
  labs(title = "Packed Circle Chart",
       x = "Group",
       y = "",
       size = "Value") +
  geom_text(color = "lightblue", size = 3)
```


## Graph 4
Interpretation:
This ridgeline plot shows the number of crimes in Chicago per month.
The plot shows that the number of crimes is highest in the summer months,
with a peak in July. This could be due to the warmer weather and longer days,
which may lead to more people being outside and more opportunities for crime.
The plot also shows a smaller peak in December, which could be due to the holiday season.
The plot also shows that the number of crimes is lowest in the winter months, with a trough in February.
This could be due to the colder weather and shorter days, which may lead to fewer people being outside and fewer opportunities for crime.

```{r}
# library
library(ggridges)
library(ggplot2)
library(viridis)
# install.packages("hrbrthemes")
library(hrbrthemes)
# install.packages("dplyr")
library(dplyr)

#extract the date from Date
crimes_data$DateWithoutTime <- format(as.Date(crimes_data$Date, format = "%m/%d/%Y"), "%m/%d/%Y")

# Sum up the number of crimes per day
crimes_per_day <- crimes_data %>% 
  group_by(DateWithoutTime) %>% 
  summarise(n = n())

#extract the month from DateWithoutTime
crimes_per_day$Month <- format(as.Date(crimes_per_day$DateWithoutTime, format = "%m/%d/%Y"), "%m")

# print(crimes_per_day)



```


```{r}
# Create the ridgeline plot for the crimes_data

ggplot(crimes_per_day, aes(x = `n`, y = `Month`, fill = ..x..)) +
  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
  scale_fill_viridis(name = "Number of Crimes", option = "C") +
  labs(title = 'Number of Crimes in Chicago per Month') +
  theme_ipsum() +
  theme(
    legend.position="none",
    panel.spacing = unit(0.1, "lines"),
    strip.text.x = element_text(size = 8)
  )


```


## Graph 5
Interpretation:
This stacked area chart shows the number of crimes in Chicago per month for the top 5 crime types.
The chart shows that theft is the most common crime type, followed by battery and criminal damage.
The chart also shows that the number of thefts is highest in the summer months, with a peak in July.
This could be due to the warmer weather and longer days, which may lead to more people being outside and more opportunities for theft.
The chart also shows a smaller peak in December, which could be due to the holiday season.
The chart also shows that the number of thefts is lowest in the winter months, with a trough in February.
This could be due to the colder weather and shorter days, which may lead to fewer people being outside and fewer opportunities for theft.



```{r}
# Extract month from Data in crimes_data
crimes_data$Month <- format(as.Date(crimes_data$Date, format = "%m/%d/%Y"), "%m")

# Sum up the number of crimes per every crime type, also add the month
crimes_per_type <- crimes_data %>% 
  group_by(`Primary Type`, Month) %>% 
  summarise(n = n())

# Only keep "THEFT", "BATTERY", "CRIMINAL DAMAGE", "NARCOTICS", "ASSAULT"
crimes_per_type <- crimes_per_type %>% 
  filter(`Primary Type` %in% c("THEFT", "BATTERY", "CRIMINAL DAMAGE", "NARCOTICS", "ASSAULT"))

# print(crimes_per_type)
```



```{r}
# create data
time <- as.numeric(crimes_per_type$Month)  # x Axis
value <- crimes_per_type$n        # y Axis
group <- crimes_per_type$`Primary Type`      # group, one shape per group
data <- data.frame(time, value, group)

# stacked area chart
ggplot(data, aes(x=time, y=value, fill=group)) + 
    geom_area()
```

## Graph 6
Intrepretation:
This heatmap shows the number of crimes in Chicago per location.
The heatmap shows that most crimes occur in the city center, with a few outliers in the suburbs.
This could be due to the fact that more people live and work in the city center, and that the suburbs are more likely to be patrolled by police.
The heatmap also shows that the number of crimes is lowest in the parks, with a trough in the schools.
This could be due to the fact that parks are more likely to be patrolled by police, and that schools are more likely to be frequented by people.
 
```{r}
# Library
library(ggplot2)

# Sampling
sampled_crimes <- crimes_data[sample(1:nrow(crimes_data), 1000), ]

# approximate the latitude and longtiude to the nearest 0.01
sampled_crimes$Latitude <- round(sampled_crimes$Latitude, 2)
sampled_crimes$Longitude <- round(sampled_crimes$Longitude, 2)
x <- sampled_crimes$Latitude
y <- sampled_crimes$Longitude
my_data <- expand.grid(X=x, Y=y)
my_data$Z <- runif(400, 0, 5)
# print(my_data)
```


```{r}
# Heatmap 
ggplot(my_data, aes(X, Y, fill= Z)) + 
  geom_tile()

```




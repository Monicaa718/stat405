---
title: "Crimes in Chicago"
subtitle: "Final Presentation"
format: html
  revealjs: 
    # embed-resources: true
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    css: styles.css
    footer: STAT 405 - Benjamin Mao, Cecilia Xin, Monica Liu, Jared Boyd
---


## Outline

-   Introduction: Datasets Description & Data Cleaning
-   Data Analysis and Modeling
-   Text Mining
-   Killer PLot
-   Conclusion

# Introduction {background="#6B6B6B"}

##   Data Description
::: incremental 
-   Primary dataset: all reported crimes in Chicago from 2001 to Feb. 24, 2024
-   Secondary dataset: “Police_Stations”(shows the current location of police stations in Chicago)
-   Third dataset: “Chicago Map”(describes the geological boundaries of areas in Chicago)
:::

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(readr)
crimes_data <- read_csv("Crimes_-_2001_to_Present.csv", show_col_types = FALSE)
district_numeric <- as.numeric(crimes_data$District)
district_range <- range(district_numeric)

police_stations_data <- read_csv("Police_Stations.csv", show_col_types = FALSE)
```

::: footer
[primary data](https://catalog.data.gov/dataset/crimes-2001-to-present)
:::

## Data Cleaning
-  Key columns from primary dataset: "Date", "Primary Type", "Arrest", "Year", "Latitude", and "Longitude"
-  No data cleaning is needed for second and third datasets
-  Add primary and secondary datasets to SQLite
```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 3
library(RSQLite)
data_dir <- "~/Desktop/Stat405/presentation"
dbname <- "Crimes_and_Police_Stations"
dcon <- dbConnect(SQLite(), dbname = paste0(data_dir, dbname, ".sqlite"))
dbListTables(dcon)
initExtension(dcon) # To load extension functions
dbWriteTable(dcon, "crimes_data", crimes_data, overwrite = TRUE)
dbWriteTable(dcon, "police_stations_data", police_stations_data, overwrite = TRUE)
```


# Data Analysis and Modeling {background="#6B6B6B"}

## When crimes are committed 
###   Line Plot

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(dplyr)
total_crimes_by_year <- crimes_data %>% 
  group_by(Year) %>% 
  summarise(Total = n())
arrests_by_year <- crimes_data %>% 
  group_by(Year) %>% 
  summarise(Arrest_num = sum(Arrest == "TRUE"))
non_arrests_by_year <- crimes_data %>% 
  group_by(Year) %>% 
  summarise(Non_Arrest_num = sum(Arrest == "FALSE"))
merged_data <- merge(total_crimes_by_year, arrests_by_year, by = "Year")
merged_data <- merge(merged_data, non_arrests_by_year, by = "Year")
plot(merged_data$Year, merged_data$Total, 
     type = "o",  
     xlab = "Year", ylab = "Number of Crimes",
     main = "Total Crimes, Arrests, and Non-Arrests from 2001 to 2023",
     col = "blue", pch = 16, ylim = c(0, max(merged_data$Total)))
lines(merged_data$Year, merged_data$Arrest_num, 
      type = "o", 
      col = "green", pch = 16)
lines(merged_data$Year, merged_data$Non_Arrest_num, 
      type = "o", 
      col = "red", pch = 16)
legend("topright", legend = c("Total Crimes", "Arrests", "Non-Arrests"), 
       col = c("blue", "green", "red"), pch = 16, cex = 0.8)
```

##    Ridgeline Plot

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(ggridges)
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(dplyr)
crimes_data$DateWithoutTime <- format(as.Date(crimes_data$Date, format = "%m/%d/%Y"), "%m/%d/%Y")
crimes_per_day <- crimes_data %>% 
  group_by(DateWithoutTime) %>% 
  summarise(n = n())
crimes_per_day$Month <- format(as.Date(crimes_per_day$DateWithoutTime, format = "%m/%d/%Y"), "%m")
ggplot(crimes_per_day, aes(x = `n`, y = `Month`, fill = ..x..)) +
  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
  scale_fill_viridis(name = "Number of Crimes", option = "C") +
  labs(title = 'Number of Crimes in Chicago per Month', x = "Number of Crimes", y = "") +
  scale_y_discrete(labels = month.name) +
  theme_ipsum() +
  theme(
    legend.position="none",
    panel.spacing = unit(0.1, "lines"),
    strip.text.x = element_text(size = 8)
  )
```

##    Density Plot

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
date = substr(crimes_data$Date, 1, 10)
years_after <- as.numeric(substr(date, 1, 2)) / 30 +
              as.numeric(substr(date, 4, 5)) / 365 +
              as.numeric(substr(date, 7, 10))
density = density(years_after)
ggplot(data.frame = density) +
  aes(density$x, density$y) +
  geom_line() +
  labs(x = "Year", y = "Density", title = "Density of Crime over Time")
```

##     Lollipop Plot

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(ggplot2)
library(dplyr)
crimes_data$Hour <- format(as.POSIXct(crimes_data$Date, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H")
crimes_per_hour <- crimes_data %>% 
  group_by(Hour) %>% 
  summarise(n = n())
data <- data.frame(
  x=crimes_per_hour$Hour,
  y=crimes_per_hour$n
)
ggplot(data, aes(x=x, y=y)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=y), color="skyblue") +
  geom_point( color="skyblue", size=3) +
  theme_minimal() +
  labs(title = "Number of Crimes in Chicago per Hour",
       x = "Hours",
       y = "Number of Crimes")
```


## Where crimes are committed

###     Packed Circle Chart

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(packcircles)
library(ggplot2)
library(viridis)
table = table(crimes_data$`Location Description`)
ordered_location = table[order(table, decreasing = TRUE)][1:5]
crime_counts <- data.frame(
  `Primary Type` = names(ordered_location),
  count = ordered_location
)
group = crime_counts$count.Var1
value = crime_counts$count.Freq
ggplot(crime_counts, aes(x = group, y = group, size = value, label = group)) +
  geom_point(alpha = 0.7) +
  scale_size_area(max_size = 20) +
  theme_minimal() +
  theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank()) +
  labs(title = "Frequency of Crimes by Type of Location",
       x = "Group",
       y = "",
       size = "Value") +
  geom_text(color = "lightblue", size = 3)

```

##     Facet Wrap Graph

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
common_crimes = sort(table(crimes_data$`Primary Type`), decreasing = TRUE)[1:9]
filter = crimes_data$`Primary Type` %in% names(common_crimes)
dist = crimes_data$District[filter == TRUE]
type = crimes_data$`Primary Type`[filter == TRUE]
crimes_data_filtered = data.frame(District = dist, Type = type)
ggplot(crimes_data_filtered, aes(x = as.numeric(District))) +
  geom_bar(aes(fill = Type), position = "dodge") +
  facet_wrap(~Type, ncol = 3) +
  theme(axis.text.x = element_text(size = 7)) +
  labs(title = "Frequency of Crimes in Each District",
       x = "District",
       y = "Frequency of Crimes")
```

##     Scatter Plot with District Lines

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
sampled_crimes <- crimes_data[sample(1:nrow(crimes_data), 10000), ]
library(sf)
shapes = st_read("Boundaries - Police Districts (current)/geo_export_f2fab567-0511-4fce-901e-2f53fcec44f7.shp", quiet = TRUE)
ggplot() +
  geom_sf(data = shapes) +
  coord_sf() +
  geom_point(aes(x = sampled_crimes$Longitude, y = sampled_crimes$Latitude,),
             size = 0.5, alpha = 0.5, color = "red") +
  labs(title = "Scatterplot of Crime Locations with District Lines",
       x = "Longitude", y = "Latitude")

```

::: footer
Learn more: [District lines for the scatter plot](https://data.cityofchicago.org/Public-Safety/Boundaries-Police-Districts-current-/fthy-xz3r)
:::


# Text Mining   {background="#6B6B6B"}
### Replace pie chart with a dplyr pipeline

```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 5
library(dplyr)
library(knitr)
library(kableExtra)
freq_types <- crimes_data %>%
  select(`Primary Type`) %>%
  group_by(`Primary Type`) %>%
  summarise(count = n()) %>%
  arrange(desc(count))
kable(head(freq_types, 9), caption = "Number of Crimes Based on Primary Type") %>%
  kable_styling(font_size = 15)
```

## Scatterplot analysis {.smaller  .scrollable transition="slide"}

::: panel-tabset 

### Table
```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
library(dplyr)
# Query for the first area
res1 <- dbSendQuery(conn = dcon, "
SELECT LATITUDE, LONGITUDE, COUNT(*) AS num_police_stations
FROM police_stations_data
WHERE LATITUDE BETWEEN 41.85 AND 41.90 AND LONGITUDE BETWEEN -87.78 AND -87.60
")
(area1 <- dbFetch(res1))

# Query for the second area
res2 <- dbSendQuery(conn = dcon, "
SELECT LATITUDE, LONGITUDE, COUNT(*) AS num_police_stations
FROM police_stations_data
WHERE LATITUDE BETWEEN 41.75 AND 41.80 AND LONGITUDE BETWEEN -87.70 AND -87.61
")
(area2 <- dbFetch(res2))
```

### Code
```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
library(dplyr)
# Query for the first area
res1 <- dbSendQuery(conn = dcon, "
SELECT LATITUDE, LONGITUDE, COUNT(*) AS num_police_stations
FROM police_stations_data
WHERE LATITUDE BETWEEN 41.85 AND 41.90 AND LONGITUDE BETWEEN -87.78 AND -87.60
")
(area1 <- dbFetch(res1))

# Query for the second area
res2 <- dbSendQuery(conn = dcon, "
SELECT LATITUDE, LONGITUDE, COUNT(*) AS num_police_stations
FROM police_stations_data
WHERE LATITUDE BETWEEN 41.75 AND 41.80 AND LONGITUDE BETWEEN -87.70 AND -87.61
")
(area2 <- dbFetch(res2))
```
:::

## Killer Plot

## Conclusion
::: incremental
-    Greater focus in summer months and evening hours
-    More resources in districts 15 - 25
-    Police work is complicated and more data is needed to make more specific recommendations
:::